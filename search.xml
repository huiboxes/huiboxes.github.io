<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>盒子模型</title>
    <url>/2019/11/30/%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<p>1.什么是盒子模型？盒子的大小是多少？</p>
<p>​        网页中所有的文字、图片等内容都是写在标签内的，可以将这些<code>HTML</code>标签看作是一个容器——盒子。通过<code>CSS</code>设置<code>width</code>属性、<code>height</code>属性控制这个盒子的宽高（盒子大了，能装的东西自然会更多）。在这个盒子里可以用<code>padding</code>属性来填充，达到使内容相对于这个盒子居中的效果（既然是填充，当然不能在填充部分放东西）。通过<code>border</code>属性给盒子加边框，美化这个盒子。想控制每个盒子的间距，可以使用<code>margin</code>，控制这个完全透明的“隔板”的厚度。如果未给盒子指定宽高，盒子的大小是根据内容的宽高，假如给盒子盒子固定的宽高，当内容大于盒子时，内容会溢出，盒子不会有任何变化。补充：前面说到网页中所有HTML标签都可看作是一个盒子，那么<code>&lt;body&gt;</code>标签算吗？算的，并且细心观察会发现<code>&lt;body&gt;</code>标签是自带8px的外边距的。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">	&lt;style&gt;</span><br><span class="line">		div&#123;</span><br><span class="line">			width: 20px;				/* 盒子宽度20像素 */</span><br><span class="line">			height: 20px;				/* 盒子高度20px */</span><br><span class="line">			border: 1px solid black;	/* 给盒子四周加上1像素、黑色实线边框 */</span><br><span class="line">			padding: 2px;				/* 给盒子内部四周填充2像素 */</span><br><span class="line">			margin: 20px;					/* 给盒子外部四周加20像素间距 */</span><br><span class="line">		&#125;</span><br><span class="line">	/* ==========================================================================</span><br><span class="line">       以上是复合属性，一次性同设置加盒子四周。想单独设置盒子某个方向的话在属性后加方向来单独设置</span><br><span class="line">       例如： </span><br><span class="line">       margin-top: 10px;		单独添加外上边距10像素</span><br><span class="line">       margin-right: 10px;		单独添加外右边距10像素</span><br><span class="line">       margin-bottom: 10px;		单独添加外下边距10像素</span><br><span class="line">       margin-left: 10px;		单独添加外左边距10像素</span><br><span class="line">       border与padding以此类推也是同样的方法。</span><br><span class="line">       ========================================================================== */</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">	&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>

<p>上面的盒子实际宽高是多少？</p>
<p>这要分情况，因为盒子模型分为两种，一种是W3C标准盒模型，还有一种在低版本IE环境下的IE盒模型。两者两者的区别在于W3C盒模型的宽高等于<code>margin+border+padding+content</code>，IE盒模型的宽高等于<code>margin+content</code>。也就是说<code>padding、border</code>是算在IE盒模型的内容部分的。</p>
<p>上面的盒子按照W3C标准盒模型计算的话是：</p>
<p>因为宽高设置同样的值，所以宽高都是：20+1<em>2+2</em>2+20*2=46px</p>
<p>按照IE盒模型计算的话，宽高：20+20*2=40px</p>
<p>怎样快速理解盒子模型？用尽量少的<code>&lt;div&gt;</code>标签画一个远视图。</p>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>盒子模型</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS引入与三种选择器</title>
    <url>/2019/11/29/CSS%E5%BC%95%E5%85%A5%E4%B8%8E%E4%B8%89%E7%A7%8D%E9%80%89%E6%8B%A9%E5%99%A8/</url>
    <content><![CDATA[<p>1：为何引用CSS？<br>2：多种选择器作用同一元素时谁会生效？</p>
<p>掌握了HTML基础，应用起来也可以做出比较不错的页面，但是要做出更加精美的网页还是要依靠CSS，一个网页中所看到的字体、间距、颜色和部分特效等都是由CSS来实现的，通过选择器对文档某个部分添加样式。显然，CSS不能单独使用。把网页比作建房子的话，HTML做出毛胚房，CSS来装修。CSS与HTML是两个语言，引入CSS就是将它们关联在一起。</p>
<p>CSS由三种引用方式：内嵌、内联、外联。</p>
<p>1）内嵌</p>
<blockquote>
<!--<div style="color: pink;">Hellow world !!!</div>-->
</blockquote>
<p>优先级最高,但是当网页内容变多后，想要更改样式就比较费时间。并且只能给单个标签使用。不建议使用这种方式。</p>
<p>2）内联</p>
<style>
    div{color: black;}/* 所有div内的字体颜色都改为黑色 */
</style>

<p>在<head>部分添加<style></style>标签，在标签内直接写CSS，在代码量少时为了方便可以这样，为了规范还是不建议使用这种方式。</p>
<p>3)外联</p>
<p>将CSS单独写在.css文件中，通过HTML的<link>标签从外部导入到。</p>
<link rel="stylesheet" type="text/css" href="./fileName.css"/>

<p>符合“结构样式行为相分离”，规范并且便于后期维护。</p>
<p>通常情况下如果同时用多种方法给同一个元素设置相同的属性但是不同的属性值时，会优先显示内嵌的样式，然后就是内联，最后才是外联。也就是说在优先级方面，内嵌&gt;内联&gt;外联。</p>
<p>上学的时候老师依靠同学的名字或者位置准确的叫某位同学回答问题.CSS也是如此,依靠选择器对网页中的每一个HTML元素添加样式.最最常见的选择器有以下三种</p>
<p>1.标签选择器</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    body&#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-tag">black</span>;			<span class="comment">/* body标签内所有元素字体颜色改为black */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">margin</span>: 0;				<span class="comment">/* body标签内所有元素边距为0 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">padding</span>: 0;				<span class="comment">/* body标签内所有元素填充为0 */</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>直接在HTML某种标签后加花括号,文档内所有此类标签都会生效.写代码讲究”高内聚弱耦合”,如果几行代码都实现同样的功能,可以简化就简化.比如网页中HTML中的a标签默认是带下划线并且是蓝色的,然而这显然不符合现代人的审美,通常都会用一个标签选择器来去掉下划线,改下字体样式.</p>
<p>2.<code>id</code>选择器</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#demo</span>&#123;<span class="attribute">color</span>: pink;&#125;   <span class="comment">/* 在id名前加个 # ,优先级较高 */</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;div id="demo"&gt;&lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在标签中加<code>id=&quot;id-name&quot;</code> 标签就有了自己的<code>id</code>,在<code>id</code>名前加一个<code>＃</code> 即可为拥有这个<code>id</code>值的所有属性添加样式.不过为了规范,通常一个<code>id</code>只给一个标签,保证其唯一性,就如同每个人的身份证号码一般.</p>
<p>3.<code>class</code>选择器(类选择器)</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.demo</span>&#123;<span class="attribute">color</span>: pink;&#125;   <span class="comment">/* 在class名前加个 .  */</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;div class="demo"&gt;&lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>不难看出,与<code>id</code>选择器十分类似.那么它们的区别在哪儿呢?能直观看出区别的就是<code>id</code>选择器的优先级比<code>class</code>选择器高.为了使结构更加明确,通常多个元素要用相同的样式时用<code>class</code>,那么单一的元素—最好也使用<code>class</code>.通常<code>id</code>是给<code>JavaScript</code>用的.</p>
<p>在优先级方面,标签选择器.标签选择器一次针对的对象可能会非常多,优先级自然不会高,然后就是<code>class</code>,”唯一”的<code>id</code>优先级当然是最高的,<code>id</code>选择器&gt;<code>class</code>选择器&gt;.</p>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>CSS选择器</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>flex布局</title>
    <url>/2019/11/11/flex%E5%B8%83%E5%B1%80/</url>
    <content><![CDATA[<p>&emsp;&emsp;刚接触HTML\CSS布局喜欢用<code>position</code>、<code>float</code>、<code>display</code>等等。有点小问题虽然能解决还是挺麻烦的,比如说在元素宽度刚好100%的时候想给每个子元素加个边框，标准盒模型就会大一圈，元素就会被挤下去，想让它们全在一行又要算盒子大小，有时候用<code>calc()</code>函数虽然方便点但是兼容性不是很好，并且当你想让3个<code>div</code>居中时怎么处理？每个宽度设置33.33…%那肯定是不现实的。这时就会想这要是可以自适应缩放该多好，<code>flex</code>刚好就是弹性布局，可以完美解决这个问题。听说现在用<code>flexbox</code>的很多，相对来说比较方便，尽管在<a href="https://caniuse.com/" target="_blank" rel="noopener">caniuse.com</a>中看到兼容性也是还行，不过兼容性相对来说不是特别好。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-class">.flexContainer</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;div class="flexContainer"&gt;</span><br><span class="line">    &lt;div class="flexItem"&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div class="flexItem"&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;这就是一个<code>flexbox</code>。<code>flex</code>也叫弹性布局，父容器包裹着子元素。实际上还有一个轴的概念，默认情况下这个主轴是父元素水平方向从左到右的距离，子元素也是根据主轴排版的。通过属性可以改变轴的方向以及将父容器切分等十分方便，用了弹性布局，子元素就不需要浮动了，都是根据轴来排版，当然加了也没用，因此<code>clear</code>属性也会失效。</p>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>CSS布局</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇博客</title>
    <url>/2019/11/10/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>&emsp;&emsp;一时兴起想弄个博客，个人空间吗，主要用于记录平时的学习、生活。时不时发一点所学的，或者新的感悟，等以后回过头看复习，或许也能勉励一下自己。为什么我不想用QQ空间了呢？我现在认为比起QQ空间来说Blog更加自由，更加的开放却又隐私。往后我将会把每个月的周安排都发到Blog上，进一步提醒自己。<br>&emsp;&emsp;<img src="2019-11plan.png" alt=""><br>&emsp;&emsp;11月的bilibili要改成acfun了，因为听说Rick and Morty新一季要出来了。此外我打算囫囵吞枣的把Linux学一遍，如果有事找我，在上课和培训的时候我一般不会回复，等有时间了如果有能力我十分乐意帮忙解决。对了，这是我的第一篇Blog，有点小激动，可以在评论区留下你对我本人的看法、及意见。最好能留下对我的第一映像和我的缺点哦，十分感谢！</p>
]]></content>
      <categories>
        <category>心情</category>
      </categories>
      <tags>
        <tag>first</tag>
        <tag>闲谈</tag>
      </tags>
  </entry>
</search>
