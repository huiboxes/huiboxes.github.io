<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>ShaohuiのBlog</title>
  
  <subtitle>编程初学者</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://huiboxs.cn/"/>
  <updated>2019-11-11T14:03:57.682Z</updated>
  <id>https://huiboxs.cn/</id>
  
  <author>
    <name>Shaohui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>flex布局</title>
    <link href="https://huiboxs.cn/2019/11/11/flex%E5%B8%83%E5%B1%80/"/>
    <id>https://huiboxs.cn/2019/11/11/flex%E5%B8%83%E5%B1%80/</id>
    <published>2019-11-11T11:35:08.000Z</published>
    <updated>2019-11-11T14:03:57.682Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;刚接触HTML\CSS布局喜欢用<code>position</code>、<code>float</code>、<code>display</code>等等。不过是不是有点小问题还是虽然能解决还是挺麻烦的,比如说在元素宽度刚好100%的时候想给每个子元素加个边框，标准盒模型就会大一圈，元素就会被挤下去，，想让它们全在一行又要算盒子大小，有时候用<code>calc()</code>函数虽然方便点但是兼容性不是很好，并且当你想让3个<code>div</code>居中时怎么处理？每个宽度设置33.3333….%那肯定时不现实的。就会想这要是可以自适应缩放该多好，<code>flex</code>刚好就是弹性布局，可以完美解决这个问题。听说现在用<code>flexbox</code>的很多，相对来说比较方便，尽管在<a href="https://caniuse.com/" target="_blank" rel="noopener">caniuse.com</a>中看到兼容性也是还行，不过兼容性相对来说不是特别好。</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-class">.flexContainer</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;div class="flexContainer"&gt;</span><br><span class="line">    &lt;div class="flexItem"&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div class="flexItem"&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这就是一个<code>flexbox</code>。<code>flex</code>也叫弹性布局，父容器包裹着子元素。实际上还有一个轴的概念，默认情况下这个主轴是父元素水平方向从左到右的距离，子元素也是根据主轴排版的。用了弹性布局，子元素就不需要浮动了，都是根据轴来排版，当然加了也没用，因此<code>clear</code>属性也会失效。下面就是一些常用属性。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">flex</span>: 1;</span><br><span class="line">将父容器分成多份，子元素所占的系数，最大的好处就是能屈能伸，可以适应不同的屏幕大小。</span><br><span class="line"><span class="selector-tag">jusitify-content</span>: ; </span><br><span class="line"><span class="selector-tag">center</span>就是子元素水平居中，相对于<span class="selector-tag">position</span>方便了不少。</span><br><span class="line">还可以用 <span class="selector-tag">space-netween</span> 使子元素两端对齐。还有一个很奇怪的属性 <span class="selector-tag">space-around</span> ，听到过一个生动的例子，  </span><br><span class="line">相当于每个子元素都是一个人，所有元素双手伸开手拉手分布。</span><br><span class="line"><span class="selector-tag">align-items</span>：; </span><br><span class="line">设置子元素垂直排列,默认属性是 <span class="selector-tag">flex-start</span> 左对齐，与之对应的就是 <span class="selector-tag">flex-end</span> 右对齐，当然也有 <span class="selector-tag">center</span> 垂直居中。</span><br><span class="line"><span class="selector-tag">flex-direction</span>: ;</span><br><span class="line">排列方向，默认为 <span class="selector-tag">row</span> 从左到右，<span class="selector-tag">row-reverse</span> 从右到左 ， <span class="selector-tag">colume</span> 从下到上。</span><br><span class="line"><span class="selector-tag">flex-wrap</span>: ;    </span><br><span class="line">子元素是否在一行显示，默认值 <span class="selector-tag">wrap</span> 换行，对应也有 <span class="selector-tag">nowrap</span> 不换行。</span><br><span class="line"><span class="selector-tag">flex-flow</span>: ;</span><br><span class="line"><span class="selector-tag">Flex-direction</span>和<span class="selector-tag">flex-wrap</span>经常一起用  所以出现组合的属性</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;emsp;&amp;emsp;刚接触HTML\CSS布局喜欢用&lt;code&gt;position&lt;/code&gt;、&lt;code&gt;float&lt;/code&gt;、&lt;code&gt;display&lt;/code&gt;等等。不过是不是有点小问题还是虽然能解决还是挺麻烦的,比如说在元素宽度刚好100%的时候想给每个
      
    
    </summary>
    
    
      <category term="CSS" scheme="https://huiboxs.cn/categories/CSS/"/>
    
    
      <category term="CSS布局" scheme="https://huiboxs.cn/tags/CSS%E5%B8%83%E5%B1%80/"/>
    
      <category term="前端" scheme="https://huiboxs.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博客</title>
    <link href="https://huiboxs.cn/2019/11/10/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>https://huiboxs.cn/2019/11/10/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2019-11-10T15:06:40.000Z</published>
    <updated>2019-11-11T11:38:07.130Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;一时兴起想弄个博客，个人空间吗，主要用于记录平时的学习、生活。时不时发一点所学的，或者新的感悟，等以后回过头看复习，或许也能勉励一下自己。为什么我不想用QQ空间了呢？我现在认为比起QQ空间来说Blog更加自由，更加的开放却又隐私。往后我将会把每个月的周安排都发到Blog上，进一步提醒自己。<br>&emsp;&emsp;<img src="2019-11plan.png" alt=""><br>&emsp;&emsp;11月的bilibili要改成acfun了，因为听说Rick and Morty新一季要出来了。此外我打算囫囵吞枣的把Linux学一遍，如果有事找我，在上课和培训的时候我一般不会回复，等有时间了如果有能力我十分乐意帮忙解决。对了，这是我的第一篇Blog，有点小激动，可以在评论区留下你对我本人的看法、及意见。最好能留下对我的第一映像和我的缺点哦，十分感谢！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;emsp;&amp;emsp;一时兴起想弄个博客，个人空间吗，主要用于记录平时的学习、生活。时不时发一点所学的，或者新的感悟，等以后回过头看复习，或许也能勉励一下自己。为什么我不想用QQ空间了呢？我现在认为比起QQ空间来说Blog更加自由，更加的开放却又隐私。往后我将会把每个月的
      
    
    </summary>
    
    
      <category term="心情" scheme="https://huiboxs.cn/categories/%E5%BF%83%E6%83%85/"/>
    
    
      <category term="first" scheme="https://huiboxs.cn/tags/first/"/>
    
      <category term="闲谈" scheme="https://huiboxs.cn/tags/%E9%97%B2%E8%B0%88/"/>
    
  </entry>
  
</feed>
